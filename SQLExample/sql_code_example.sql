DROP TABLE PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES;
CREATE TABLE PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES AS
(
	SELECT
		*
	FROM
	(
		SELECT
			*,
			row_number() OVER (PARTITION BY DIR, BOOKING_CODE, OW_RT_IND, BRAND, CITY_CONN,  TRAVEL_DATE_FROM, TRAVEL_DATE_TO ORDER BY AF_PRICE_TOTAL_USD ASC) TOTAL_AMT_ORDER
		FROM
		(
			SELECT
				*,
				RANK() OVER (PARTITION BY DIR, f.ID, CITY_CONN ORDER BY TIME_CALCULATED DESC) TOTAL_CALC_ORDER
			FROM
			(
				SELECT DISTINCT
					c_o.CODE || c_d.CODE as dir,
					c_o.CODE as CITY_FROM,
					c_d.CODE as CITY_TO,
					c_c.CODE as CITY_CONN,

					substr(f.HASHID, 1, 6) AS HASHDIR,

					f.CODE as FARE_CODE,
					f.ID,
					f.OW_RT_IND,
					substr(f.CODE, 1, 1) as BOOKING_CODE,
					--f.BRAND, --RT BRANDS FOR OW FARES
					SUBSTR(f.CODE, 2, 2) AS BRAND,

					f.PRICE_BASE AS PRICE_BASE,
					f.CURRENCY_CODE as F_currency_code,

					af.PRICE_BASE as AF_PRICE_BASE,
					af.PRICE_TOTAL as AF_PRICE_TOTAL,
					af.CURRENCY_CODE as AF_currency_code,
					AF_PRICE_TOTAL * er.RATE AS AF_PRICE_TOTAL_USD,
					af.TIME_CALCULATED,

					dd.FULL_DATE as DISCONTINUE_DATE,
					ed.FULL_DATE as EFFECTIVE_DATE,
					ff.SERVICE_CLASS_CODE,

					std.FULL_DATE as SALES_DATE_TO,
					sfd.FULL_DATE as SALES_DATE_FROM,

					CASE --Дата начала перевозки, выбирается как максимальная между TRAVEL_FROM_DATE, ACTIVITY_FROM_DATE, EFFECTIVE_DATE
						WHEN 1!=1
							OR (f.TRAVEL_DATE_FROM IS NULL AND ap.ACTIVITY_FROM_DATE IS NOT NULL AND EFFECTIVE_DATE <= ap.ACTIVITY_FROM_DATE)
							OR (f.TRAVEL_DATE_FROM IS NOT NULL AND ap.ACTIVITY_FROM_DATE IS NOT NULL AND  f.TRAVEL_DATE_FROM <= ap.ACTIVITY_FROM_DATE AND EFFECTIVE_DATE <= ap.ACTIVITY_FROM_DATE)
							THEN ap.ACTIVITY_FROM_DATE
						WHEN 1!=1
							OR (f.TRAVEL_DATE_FROM IS NOT NULL AND ap.ACTIVITY_FROM_DATE IS NULL AND EFFECTIVE_DATE <= f.TRAVEL_DATE_FROM)
							OR (f.TRAVEL_DATE_FROM IS NOT NULL AND ap.ACTIVITY_FROM_DATE IS NOT NULL AND ap.ACTIVITY_FROM_DATE <= f.TRAVEL_DATE_FROM AND EFFECTIVE_DATE <= f.TRAVEL_DATE_FROM)
							THEN f.TRAVEL_DATE_FROM
						ELSE
							EFFECTIVE_DATE
						END AS TRAVEL_DATE_FROM,


		            CASE --Дата окончания перевозки, выбирается как минимальная между TRAVEL_TO_DATE, ACTIVITY_TO_DATE, DISCONTINUE_DATE
		                WHEN 1!=1
		                    OR (f.TRAVEL_DATE_TO IS NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NULL)
		                    OR (f.TRAVEL_DATE_TO IS NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NOT NULL AND ap.ACTIVITY_TO_DATE <= DISCONTINUE_DATE)
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NULL AND ap.ACTIVITY_TO_DATE <= f.TRAVEL_DATE_TO)
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NOT NULL AND ap.ACTIVITY_TO_DATE <= f.TRAVEL_DATE_TO AND ap.ACTIVITY_TO_DATE <= DISCONTINUE_DATE)
		                    THEN ap.ACTIVITY_TO_DATE
		                WHEN 1!=1
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NULL AND DISCONTINUE_DATE IS NULL)
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NULL AND DISCONTINUE_DATE IS NOT NULL AND f.TRAVEL_DATE_TO <= DISCONTINUE_DATE)
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NULL AND f.TRAVEL_DATE_TO <= ap.ACTIVITY_TO_DATE)
		                    OR (f.TRAVEL_DATE_TO IS NOT NULL AND ap.ACTIVITY_TO_DATE IS NOT NULL AND DISCONTINUE_DATE IS NOT NULL AND f.TRAVEL_DATE_TO <= ap.ACTIVITY_TO_DATE AND f.TRAVEL_DATE_TO <= DISCONTINUE_DATE)
		                    THEN f.TRAVEL_DATE_TO
		                ELSE
		                    DISCONTINUE_DATE
		                END AS TRAVEL_DATE_TO


				FROM PROJECTNAME.FARES f
					INNER JOIN PROJECTNAME.FARE_GROUPS fg 	ON f.FARE_GROUP_ID = fg.ID
					INNER JOIN PROJECTNAME.FARE_FAMILIES ff	ON fg.FARE_FAMILY_ID = ff.ID
					INNER JOIN PROJECTNAME.CITIES as c_o		ON ff.ORIGIN_CITY_ID = c_o.ID
					INNER JOIN PROJECTNAME.CITIES as c_d		ON ff.DESTINATION_CITY_ID = c_d.ID
					INNER JOIN PROJECTNAME.AIRLINES as aa		ON ff.FILING_AIRLINE_ID = aa.ID
					LEFT JOIN PROJECTNAME.FARES su_fares		ON f.SU_FARE_ID = su_fares.ID
					LEFT JOIN PROJECTNAME.DATES as ed		ON f.EFFECTIVE_DATE_ID = ed.ID
					LEFT JOIN PROJECTNAME.AIRPORT_FARES as af ON f.ID = af.FARE_ID
					LEFT JOIN PROJECTNAME.DATES dd 			ON f.DISCONTINUE_DATE_ID = dd.ID
					LEFT JOIN PROJECTNAME.AIRPORTS  aap       ON aap.ID = af.CONNECTION_AIRPORT_ID
					LEFT JOIN PROJECTNAME.CITIES c_c			ON aap.CITY_ID = c_c.ID
					LEFT JOIN PROJECTNAME.DATES std			ON std.ID = f.SALES_TO_ID
					LEFT JOIN PROJECTNAME.DATES sfd			ON sfd.ID = f.SALES_FROM_ID
					LEFT JOIN (
										SELECT
							ap.FARE_ID,
							fd.FULL_DATE as ACTIVITY_FROM_DATE,
							td.FULL_DATE as ACTIVITY_TO_DATE
						FROM
							PROJECTNAME.FARE_ACTIVITY_PERIODS ap
							INNER JOIN PROJECTNAME.DATES td
							ON ap.DATE_TO_ID = td.ID
							INNER JOIN PROJECTNAME.DATES fd
							ON ap.DATE_FROM_ID  = fd.ID
						)ap
						ON f.ID = ap.FARE_ID

					CROSS JOIN
					(
						SELECT
							*
						FROM
						(
							SELECT
						    	*,
						        ROW_NUMBER() OVER (PARTITION BY CURR_FROM||CURR_TO ORDER BY EFFECTIVE_DATE DESC) as EFFECTIVE_ORDER
						    FROM PROJECTNAME.EXCHANGE_RATES
						)a
						   	WHERE 1=1
						        AND EFFECTIVE_ORDER = 1
						       	AND CURR_TO = 'USD'
					) er


				WHERE 1=1
					and aa.CODE = 'SU'
					and (DISCONTINUE_DATE IS NULL OR DISCONTINUE_DATE >= now())
					and EFFECTIVE_DATE <= now()
					and (SALES_DATE_FROM IS NULL OR SALES_DATE_FROM <= now())
					and (SALES_DATE_TO IS NULL OR SALES_DATE_TO >= now())
					and f.PRICE_BASE IS NOT NULL
					and fg.ROUTING_NUMBER in (15)

					AND (af.CURRENCY_CODE IS NULL OR af.CURRENCY_CODE = er.CURR_FROM)
					AND (NOT FARE_CODE like 'JPASS%')
					AND (NOT FARE_CODE like 'YPASS%')
					AND (NOT FARE_CODE like 'BPX%')
			)f
		)f
		WHERE 1=1
			AND f.TOTAL_CALC_ORDER = 1
	)f
	WHERE 1=1
		AND f.TOTAL_AMT_ORDER = 1
);

WITH ORIG_CITIES AS
(
	SELECT
		CODE
	FROM
		PROJECTNAME.CITIES oc
	WHERE 1=1
		AND CODE IN ('AAQ','ABA','AER','ARH','ASF','BAX','BQS','BTK','CEK','EGO','GDX','GDZ','GOJ','GRV','HMA','HTA','IAR','IGT','IJK','IKT','KEJ','KGD','KHV','KJA','KRR','KUF','KXK','KZN','LED','MCX','MMK','MQF','MRV','NAL','NBC','NJC','NOZ','NSK','NUX','OGZ','OMS','OSW','OVB','PEE','PEZ','PKC','REN','ROV','RTW','SCW','SGC','SIP','SKX','SLY','STW','SVX','TJM','TOF','UFA','ULY','URS','UUD','UUS','VOG','VOZ','VVO','YKS')
),

DEST_CITIES AS
(
	SELECT
		CODE
	FROM
		PROJECTNAME.CITIES dc
	WHERE 1=1
		AND CODE IN ('AAQ','ABA','AER','ARH','ASF','BAX','BQS','BTK','CEK','EGO','GDX','GDZ','GOJ','GRV','HMA','HTA','IAR','IGT','IJK','IKT','KEJ','KGD','KHV','KJA','KRR','KUF','KXK','KZN','LED','MCX','MMK','MQF','MRV','NAL','NBC','NJC','NOZ','NSK','NUX','OGZ','OMS','OSW','OVB','PEE','PEZ','PKC','REN','ROV','RTW','SCW','SGC','SIP','SKX','SLY','STW','SVX','TJM','TOF','UFA','ULY','URS','UUD','UUS','VOG','VOZ','VVO','YKS')
),

CONN_CITIES AS
(
	SELECT
		CODE
	FROM
		PROJECTNAME.CITIES cc
	WHERE 1=1
		AND CODE IN ('MOW')
),

DIRECTIONS AS
(
	SELECT DISTINCT
		*
	FROM
	(
		SELECT
			oc.CODE AS ORIGIN_CITY_CODE,
			dc.CODE AS DESTINATION_CITY_CODE,
			cc.CODE AS CONN_CITY_CODE
		FROM
			ORIG_CITIES oc
		CROSS JOIN
			DEST_CITIES dc
		CROSS JOIN
			CONN_CITIES cc

		UNION ALL

		SELECT
			dc.CODE AS ORIGIN_CITY_CODE,
			oc.CODE AS DESTINATION_CITY_CODE,
			cc.CODE AS CONN_CITY_CODE
		FROM
			ORIG_CITIES oc
		CROSS JOIN
			DEST_CITIES dc
		CROSS JOIN
			CONN_CITIES cc
	)_directions
),

TOTAL_PRICES AS
(
	SELECT
		*,
		CASE
			WHEN TRAVEL_DATE_FROM_FL >= TRAVEL_DATE_FROM_L1 AND TRAVEL_DATE_FROM_FL >= TRAVEL_DATE_FROM_L2 THEN TRAVEL_DATE_FROM_FL
			WHEN TRAVEL_DATE_FROM_L1 >= TRAVEL_DATE_FROM_FL AND TRAVEL_DATE_FROM_L1 >= TRAVEL_DATE_FROM_L2 THEN TRAVEL_DATE_FROM_L1
			ELSE TRAVEL_DATE_FROM_L2 END AS MAX_TRAVEL_FROM,

		CASE
			WHEN 1=1
				AND TRAVEL_DATE_TO_FL IS NOT NULL AND  TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_L2 IS NOT NULL
				AND TRAVEL_DATE_TO_FL <= TRAVEL_DATE_TO_L1 AND TRAVEL_DATE_TO_FL <= TRAVEL_DATE_TO_L2 THEN TRAVEL_DATE_TO_FL
			WHEN 1=1
				AND TRAVEL_DATE_TO_FL IS NOT NULL AND  TRAVEL_DATE_TO_L1 IS NULL AND TRAVEL_DATE_TO_L2 IS NOT NULL
				AND TRAVEL_DATE_TO_FL <= TRAVEL_DATE_TO_L2 THEN TRAVEL_DATE_TO_FL
			WHEN 1=1
				AND TRAVEL_DATE_TO_FL IS NOT NULL AND TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_L2 IS NULL
				AND TRAVEL_DATE_TO_FL <= TRAVEL_DATE_TO_L1 THEN TRAVEL_DATE_TO_FL
			WHEN 1=1
				AND TRAVEL_DATE_TO_FL IS NOT NULL AND  TRAVEL_DATE_TO_L1 IS NULL AND TRAVEL_DATE_TO_L2 IS NULL
				THEN TRAVEL_DATE_TO_FL

			WHEN 1=1
				AND TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_FL IS NOT NULL AND TRAVEL_DATE_TO_L2 IS NOT NULL
				AND TRAVEL_DATE_TO_L1 <= TRAVEL_DATE_TO_FL AND TRAVEL_DATE_TO_L1 <= TRAVEL_DATE_TO_L2 THEN TRAVEL_DATE_TO_L1
			WHEN 1=1
				AND TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_FL IS NULL AND TRAVEL_DATE_TO_L2 IS NOT NULL
				AND TRAVEL_DATE_TO_L1 <= TRAVEL_DATE_TO_L2 THEN TRAVEL_DATE_TO_L1
			WHEN 1=1
				AND TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_FL IS NOT NULL AND TRAVEL_DATE_TO_L2 IS NULL
				AND TRAVEL_DATE_TO_L1 <= TRAVEL_DATE_TO_FL THEN TRAVEL_DATE_TO_L1
			WHEN 1=1
				AND TRAVEL_DATE_TO_L1 IS NOT NULL AND TRAVEL_DATE_TO_FL IS NULL AND TRAVEL_DATE_TO_L2 IS NULL
				THEN TRAVEL_DATE_TO_L1

			ELSE TRAVEL_DATE_TO_L2
		END AS MIN_TRAVEL_TO,

		MIN_TRAVEL_TO - MAX_TRAVEL_FROM AS COMMON_TRAVEL_DATES,

		CASE
			WHEN RBD IS NULL THEN 'NO RBD'
			WHEN BRAND IS NULL THEN 'NO BRAND'
			WHEN DIR_FL IS NULL OR DIR_L1 IS NULL OR DIR_L2 IS NULL THEN 'NO FARE IN RBD'
			WHEN AF_PRICE_TOTAL_USD_FL IS NULL OR AF_PRICE_TOTAL_USD_L1 IS NULL OR AF_PRICE_TOTAL_USD_L2 IS NULL THEN 'NO TOTAL'
			WHEN AF_CURRENCY_CODE_FL != AF_CURRENCY_CODE_L1 OR AF_CURRENCY_CODE_FL != AF_CURRENCY_CODE_L2 THEN 'DIFFERENT CURRENCY'
			WHEN COMMON_TRAVEL_DATES < 0 THEN 'NO COMMON TRAVEL DATES'
			ELSE 'OK'
			END AS ERROR_CODE,

        (TOTAL_L1 + TOTAL_L2) - TOTAL_FL AS DELTA_L1L2_FL,
		CASE
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	< 	TOTAL_L1 + TOTAL_L2 THEN 'OK'
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	>= 	TOTAL_L1 + TOTAL_L2 THEN 'ERROR. FL >= L1 + L2'
			ELSE ERROR_CODE
			END AS TOTAL_CHECK_1,


		TOTAL_FL - TOTAL_L1 AS DELTA_FL_L1,
        TOTAL_FL - TOTAL_L2 AS DELTA_FL_L2,
		CASE
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	> 	TOTAL_L1 AND TOTAL_FL 	> 	TOTAL_L2 THEN 'OK'
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	<= 	TOTAL_L1 AND TOTAL_FL 	> 	TOTAL_L2 THEN 'ERROR. L1 >= FL'
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	> 	TOTAL_L1 AND TOTAL_FL 	<= 	TOTAL_L2 THEN 'ERROR. L2 >= FL'
			WHEN ERROR_CODE = 'OK' AND TOTAL_FL 	<= 	TOTAL_L1 AND TOTAL_FL 	<= 	TOTAL_L2 THEN 'ERROR. L1 and L2 >= FL'
			ELSE ERROR_CODE
			END AS TOTAL_CHECK_2
	FROM
	(
		SELECT
			d.*,
			rbd.RBD,
			rbd.BRAND,
			fares_transf_rt.OW_RT_IND,
			fares_transf_rt.DIR AS DIR_FL,
			fares_transf_rt.HASHDIR AS HASHDIR_FL,
			fares_transf_rt.FARE_CODE AS FARE_CODE_FL,
			fares_transf_rt.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_FL,
			fares_transf_rt.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_FL,
			fares_transf_rt.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_FL,
			fares_transf_rt.AF_PRICE_TOTAL AS TOTAL_FL,
			fares_transf_rt.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_FL,
			fares_transf_rt.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_FL,

			fares_leg1_rt.DIR AS DIR_L1,
			fares_leg1_rt.HASHDIR AS HASHDIR_L1,
			fares_leg1_rt.FARE_CODE AS FARE_CODE_L1,
			fares_leg1_rt.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_L1,
			fares_leg1_rt.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_L1,
			fares_leg1_rt.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_L1,
			fares_leg1_rt.AF_PRICE_TOTAL AS TOTAL_L1,
			fares_leg1_rt.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_L1,
			fares_leg1_rt.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_L1,

			fares_leg2_rt.DIR AS DIR_L2,
			fares_leg2_rt.HASHDIR AS HASHDIR_L2,
			fares_leg2_rt.FARE_CODE AS FARE_CODE_L2,
			fares_leg2_rt.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_L2,
			fares_leg2_rt.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_L2,
			fares_leg2_rt.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_L2,
			fares_leg2_rt.AF_PRICE_TOTAL AS TOTAL_L2,
			fares_leg2_rt.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_L2,
			fares_leg2_rt.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_L2

		FROM
			DIRECTIONS d

			LEFT JOIN (SELECT DISTINCT DIR, BOOKING_CODE AS RBD, BRAND FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES) rbd
			ON d.ORIGIN_CITY_CODE||d.DESTINATION_CITY_CODE = rbd.DIR

			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 2) fares_transf_rt
			ON 1=1
				AND d.ORIGIN_CITY_CODE||d.DESTINATION_CITY_CODE = fares_transf_rt.DIR
				AND d.CONN_CITY_CODE = fares_transf_rt.CITY_CONN
				AND fares_transf_rt.BOOKING_CODE = rbd.RBD
				AND fares_transf_rt.BRAND = rbd.BRAND


			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 2 AND CITY_CONN IS NULL) fares_leg1_rt
			ON 1=1
				AND d.ORIGIN_CITY_CODE||d.CONN_CITY_CODE = fares_leg1_rt.DIR
				AND fares_leg1_rt.BOOKING_CODE = rbd.RBD
				AND fares_leg1_rt.BRAND = fares_transf_rt.BRAND

			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 2 AND CITY_CONN IS NULL) fares_leg2_rt
			ON 1=1
				AND d.CONN_CITY_CODE||d.DESTINATION_CITY_CODE = fares_leg2_rt.DIR
				AND fares_leg2_rt.BOOKING_CODE = rbd.RBD
				AND fares_leg2_rt.BRAND = fares_transf_rt.BRAND

		UNION ALL

		SELECT
			d.*,
			rbd.RBD,
			rbd.BRAND,
			fares_transf_ow.OW_RT_IND,
			fares_transf_ow.DIR AS DIR_FL,
			fares_transf_ow.HASHDIR AS HASHDIR_FL,
			fares_transf_ow.FARE_CODE AS FARE_CODE_FL,
			fares_transf_ow.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_FL,
			fares_transf_ow.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_FL,
			fares_transf_ow.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_FL,
			fares_transf_ow.AF_PRICE_TOTAL AS TOTAL_FL,
			fares_transf_ow.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_FL,
			fares_transf_ow.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_FL,

			fares_leg1_ow.DIR AS DIR_L1,
			fares_leg1_ow.HASHDIR AS HASHDIR_L1,
			fares_leg1_ow.FARE_CODE AS FARE_CODE_L1,
			fares_leg1_ow.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_L1,
			fares_leg1_ow.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_L1,
			fares_leg1_ow.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_L1,
			fares_leg1_ow.AF_PRICE_TOTAL AS TOTAL_L1,
			fares_leg1_ow.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_L1,
			fares_leg1_ow.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_L1,


			fares_leg2_ow.DIR AS DIR_L2,
			fares_leg2_ow.HASHDIR AS HASHDIR_L2,
			fares_leg2_ow.FARE_CODE AS FARE_CODE_L2,
			fares_leg2_ow.AF_PRICE_TOTAL_USD AS AF_PRICE_TOTAL_USD_L2,
			fares_leg2_ow.AF_PRICE_TOTAL AS AF_PRICE_TOTAL_L2,
			fares_leg2_ow.AF_CURRENCY_CODE AS AF_CURRENCY_CODE_L2,
			fares_leg2_ow.AF_PRICE_TOTAL AS TOTAL_L2,
			fares_leg2_ow.TRAVEL_DATE_FROM AS TRAVEL_DATE_FROM_L2,
			fares_leg2_ow.TRAVEL_DATE_TO AS TRAVEL_DATE_TO_L2

		FROM
			DIRECTIONS d

			LEFT JOIN (SELECT DISTINCT DIR, BOOKING_CODE AS RBD, BRAND FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES) rbd
			ON d.ORIGIN_CITY_CODE||d.DESTINATION_CITY_CODE = rbd.DIR

			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 3) fares_transf_ow
			ON d.ORIGIN_CITY_CODE||d.DESTINATION_CITY_CODE = fares_transf_ow.DIR AND d.CONN_CITY_CODE = fares_transf_ow.CITY_CONN AND fares_transf_ow.BOOKING_CODE = rbd.RBD AND fares_transf_ow.BRAND = rbd.BRAND

			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 3 AND CITY_CONN IS NULL) fares_leg1_ow
			ON d.ORIGIN_CITY_CODE||d.CONN_CITY_CODE = fares_leg1_ow.DIR AND fares_leg1_ow.BOOKING_CODE = rbd.RBD AND fares_leg1_ow.BRAND = fares_transf_ow.BRAND

			LEFT JOIN
			(SELECT * FROM PROJECTNAME_FARE_CHECK_SU_ACTIVE_FARES WHERE OW_RT_IND = 3 AND CITY_CONN IS NULL) fares_leg2_ow
			ON d.CONN_CITY_CODE||d.DESTINATION_CITY_CODE = fares_leg2_ow.DIR AND fares_leg2_ow.BOOKING_CODE = rbd.RBD AND fares_leg2_ow.BRAND = fares_transf_ow.BRAND
	)totals
),

COMBINED_REPORT_TEMPLATE AS
(
	SELECT
		ORIGIN_CITY_CODE,
		DESTINATION_CITY_CODE,
		OW_RT_IND,
		RBD,
		BRAND,
		DIR_L1,
		HASHDIR_L1,
		FARE_CODE_L1,
		TO_CHAR(TRAVEL_DATE_FROM_L1, 'YYYY-MM-DD') AS TRAVEL_DATE_FROM_L1,
		TO_CHAR(TRAVEL_DATE_TO_L1, 'YYYY-MM-DD') AS TRAVEL_DATE_TO_L1,
		AF_PRICE_TOTAL_USD_L1,
		AF_PRICE_TOTAL_L1,
		AF_CURRENCY_CODE_L1,
		TOTAL_L1 AS COMPARED_TOTAL_VALUE_FL,


		DIR_L2,
		HASHDIR_L2,
		FARE_CODE_L2,
		TO_CHAR(TRAVEL_DATE_FROM_L2, 'YYYY-MM-DD') AS TRAVEL_DATE_FROM_L2,
		TO_CHAR(TRAVEL_DATE_TO_L2, 'YYYY-MM-DD') AS TRAVEL_DATE_TO_L2,
		AF_PRICE_TOTAL_USD_L2,
		AF_PRICE_TOTAL_L2,
		AF_CURRENCY_CODE_L2,
		TOTAL_L2 AS COMPARED_TOTAL_VALUE_L2,


		DIR_FL,
		HASHDIR_FL,
		FARE_CODE_FL,
		TO_CHAR(TRAVEL_DATE_FROM_FL, 'YYYY-MM-DD') AS TRAVEL_DATE_FROM_FL,
		TO_CHAR(TRAVEL_DATE_TO_FL, 'YYYY-MM-DD') AS TRAVEL_DATE_TO_FL,
		AF_PRICE_TOTAL_USD_FL,
		AF_PRICE_TOTAL_FL,
		AF_CURRENCY_CODE_FL,
		TOTAL_FL AS COMPARED_TOTAL_VALUE_FL,


		COMMON_TRAVEL_DATES,

		DELTA_L1L2_FL,
		TOTAL_CHECK_1,

		DELTA_FL_L1,
		DELTA_FL_L2,

		TOTAL_CHECK_2

	FROM
		TOTAL_PRICES
)


SELECT * FROM COMBINED_REPORT_TEMPLATE
WHERE 1=1
	AND (FARE_CODE_L1 IS NOT NULL OR FARE_CODE_L2 IS NOT NULL OR FARE_CODE_FL IS NOT NULL)
	AND (COMMON_TRAVEL_DATES IS NULL OR COMMON_TRAVEL_DATES >= 0)
